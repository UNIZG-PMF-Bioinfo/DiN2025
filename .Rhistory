#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# Ako još nije učitano
library(ape)
# Prilagođeni nazivi s emojijima
fit$tree$tip.label <- c(
"🦊 RIS",        # RIS
"🐱 DOMACA MACKA",   # DOMACA MACKA
"🐯 TIGAR",       # TIGAR
"🐆 LEOPARD",     # LEOPARD
"🦁 LAV",        # LAV
"🐾 GEPARD"      # GEPARD
)
# Dodaj boje za svaku vrstu (redoslijed isti kao gore)
tip_colors <- c("orange", "gray40", "firebrick", "darkgreen", "goldenrod", "purple")
# Iscrtavanje stabla s bojama i nazivima
plot.phylo(midpoint(fit$tree), tip.color = tip_colors, cex = 1.2, font = 2)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/lynx.png",       # RIS
"./03_maca_trka/cat.png",        # DOMACA MACKA
"./03_maca_trka/tiger.png",      # TIGAR
"./03_maca_trka/leopard.png",    # LEOPARD
"./03_maca_trka/lion.png",       # LAV
"./03_maca_trka/cheetah.png"     # GEPARD
)
# Dodaj boje za svaku vrstu (redoslijed isti kao gore)
tip_colors <- c("orange", "gray40", "firebrick", "darkgreen", "goldenrod", "purple")
# Iscrtavanje stabla s bojama i nazivima
plot.phylo(midpoint(fit$tree),  cex = 1.2, font = 2)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/lynx.png",       # RIS
"./03_maca_trka/cat.png",        # DOMACA MACKA
"./03_maca_trka/tiger.png",      # TIGAR
"./03_maca_trka/leopard.png",    # LEOPARD
"./03_maca_trka/lion.png",       # LAV
"./03_maca_trka/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
library(ggtree)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.07) +
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.07) +
theme_tree2() +
geom_tiplab(offset = 0.001, align = TRUE)
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(aes(label = name), hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
# Add image paths as a data frame
tree_data <- data.frame(
label = tree$tip.label,
image = c("cheetah.png", "lynx.png", "cat.png", "leopard.png", "lion.png", "tiger.png"),
name  = c("Cheetah", "Lynx", "House Cat", "Leopard", "Lion", "Tiger")
)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(aes(label = name), hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.9, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.001) +  # add space for names
theme_tree2()
print(p)
print(p)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.02) +  # add space for names
theme_tree2()
print(p)
quarto::quarto_render()
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(msa)
library(ape)
library(seqinr)
library(phangorn)
library(Biostrings)
library(ggtree)
tree$tip.label
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree$tip.label
# midpoint
tree <- midpoint(fit$tree)
tree$tip.label
tree$tip.label
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
tree$tip.label
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
images
# izvadi ime slika
tip_labels <- tree$tip.label %>%
# ukloni viska razmaka ako ima
trimws(.)
tip_labels
# BITNO JE DEFINIRATI IME OBJEKSRA S NAZIVOM ZIVOTINJA U FASTQ i pridodati odgovarajuci put do slike
image_map <- c(
"DOMACA MACKA" = "./03_maca_trka/stabala/cat.png",
"RIS" = "./03_maca_trka/stabala/lynx.png",
"TIGAR" = "./03_maca_trka/stabala/tiger.png",
"LEOPARD" = "./03_maca_trka/stabala/leopard.png",
"LAV" = "./03_maca_trka/stabala/lion.png",
"GEPARD" = "./03_maca_trka/stabala/cheetah.png"
)
image_map[tip_labels_clean]
# Reorder images to match tip label order
images_ordered <- image_map[tip_labels]
images_ordered
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# midpoint
tree <- midpoint(fit$tree)
# izvadi ime slika
tip_labels <- tree$tip.label %>%
# ukloni viska razmaka ako ima
trimws(.)
# BITNO JE DEFINIRATI IME OBJEKSRA S NAZIVOM ZIVOTINJA U FASTQ i pridodati odgovarajuci put do slike
image_map <- c(
"DOMACA MACKA" = "./03_maca_trka/stabala/cat.png",
"RIS" = "./03_maca_trka/stabala/lynx.png",
"TIGAR" = "./03_maca_trka/stabala/tiger.png",
"LEOPARD" = "./03_maca_trka/stabala/leopard.png",
"LAV" = "./03_maca_trka/stabala/lion.png",
"GEPARD" = "./03_maca_trka/stabala/cheetah.png"
)
# poslozi po redoslijedu u tip_labels
images_ordered <- image_map[tip_labels]
# Add image paths as a data frame
tree_data <- data.frame(label = tip_labels,
image = images_ordered)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
images_ordered
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# midpoint
tree <- midpoint(fit$tree)
# izvadi ime slika
tip_labels <- tree$tip.label %>%
# ukloni viska razmaka ako ima
trimws(.)
# BITNO JE DEFINIRATI IME OBJEKSRA S NAZIVOM ZIVOTINJA U FASTQ i pridodati odgovarajuci put do slike
image_map <- c(
"DOMACA MACKA" = "./03_maca_trka/stabala/cat.png",
"RIS" = "./03_maca_trka/stabala/lynx.png",
"TIGAR" = "./03_maca_trka/stabala/tiger.png",
"LEOPARD" = "./03_maca_trka/stabala/leopard.png",
"LAV" = "./03_maca_trka/stabala/lion.png",
"GEPARD" = "./03_maca_trka/stabala/cheetah.png"
)
# poslozi po redoslijedu u tip_labels
images_ordered <- image_map[tip_labels]
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label,
image = images_ordered)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.02) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.005) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.001) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.01) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.007) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.004) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.001) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.001) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.005) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.005) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.001) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.015) +  # add space for names
theme_tree2()
print(p)
video_path  <- "04_galerija/"
video_files <- list.files(video_path,
pattern = "\\.mp4$",
recursive = TRUE,
all.files = FALSE,
full.names = TRUE)
video_files
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Paketi
library(msa)
library(ape)
library(seqinr)
library(phangorn)
# Učitavanje sekvence
SequenceFile <- list.files(pattern = "MSAprot_fasta_trimmed.fasta",
recursive = TRUE,
full.names = TRUE)
SequenceFile
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences)))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
# Modeliranje stabla
mt <- modelTest(AlignedSequences, model = "WAG", control = pml.control(trace = 0))
