knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(msa)
library(ape)
library(seqinr)
library(phangorn)
library(Biostrings)
list.files("TNNC2-macke.fasta", recursive = T, full.names = T)
list.files(pattern="TNNC2-macke.fasta", recursive = T, full.names = T)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
Alignment <- msa(Sequences)
Alignment <- msa(Sequences)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
#Prikaz
plotBS(midpoint(fit$tree), p = .5, type="p", digits=2)
fit$tree$tip.label
# Zamijeni imenima s emojijima
fit$tree$tip.label <- c(
"🦊",  # RIS
"🐱",  # DOMAĆA MAČKA
"🐯",  # TIGAR
"🐆",  # LEOPARD
"🦁",  # LAV
"🐾"   # GEPARD (nema geparda — koristi šapu)
)
plotBS(midpoint(fit$tree), p = .5, type="p", digits=2)
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# 📦 Ako još nije učitano
library(ape)
# ✂️ Počisti razmake
fit$tree$tip.label <- trimws(fit$tree$tip.label)
# 🐾 Prilagođeni nazivi s emojijima
fit$tree$tip.label <- c(
"🦊 Lynx",        # RIS
"🐱 House Cat",   # DOMACA MACKA
"🐯 Tiger",       # TIGAR
"🐆 Leopard",     # LEOPARD
"🦁 Lion",        # LAV
"🐾 Cheetah"      # GEPARD
)
# 🌈 Dodaj boje za svaku vrstu (redoslijed isti kao gore)
tip_colors <- c("orange", "gray40", "firebrick", "darkgreen", "goldenrod", "purple")
# 🌳 Iscrtavanje stabla s bojama i nazivima
plot.phylo(midpoint(fit$tree), tip.color = tip_colors, cex = 1.2, font = 2)
# 💡 Ako i dalje koristiš plotBS za bootstrap vrijednosti, možeš ručno dodati tipove preko npr. ape::add.scale.bar()
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# Ako još nije učitano
library(ape)
# 🐾 Prilagođeni nazivi s emojijima
fit$tree$tip.label <- c(
"🦊 RIS",        # RIS
"🐱 DOMACA MACKA",   # DOMACA MACKA
"🐯 TIGAR",       # TIGAR
"🐆 LEOPARD",     # LEOPARD
"🦁 LAV",        # LAV
"🐾 GEPARD"      # GEPARD
)
# Dodaj boje za svaku vrstu (redoslijed isti kao gore)
tip_colors <- c("orange", "gray40", "firebrick", "darkgreen", "goldenrod", "purple")
# Iscrtavanje stabla s bojama i nazivima
plot.phylo(midpoint(fit$tree), tip.color = tip_colors, cex = 1.2, font = 2)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# Ako još nije učitano
library(ape)
# Prilagođeni nazivi s emojijima
fit$tree$tip.label <- c(
"🦊 RIS",        # RIS
"🐱 DOMACA MACKA",   # DOMACA MACKA
"🐯 TIGAR",       # TIGAR
"🐆 LEOPARD",     # LEOPARD
"🦁 LAV",        # LAV
"🐾 GEPARD"      # GEPARD
)
# Dodaj boje za svaku vrstu (redoslijed isti kao gore)
tip_colors <- c("orange", "gray40", "firebrick", "darkgreen", "goldenrod", "purple")
# Iscrtavanje stabla s bojama i nazivima
plot.phylo(midpoint(fit$tree), tip.color = tip_colors, cex = 1.2, font = 2)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/lynx.png",       # RIS
"./03_maca_trka/cat.png",        # DOMACA MACKA
"./03_maca_trka/tiger.png",      # TIGAR
"./03_maca_trka/leopard.png",    # LEOPARD
"./03_maca_trka/lion.png",       # LAV
"./03_maca_trka/cheetah.png"     # GEPARD
)
# Dodaj boje za svaku vrstu (redoslijed isti kao gore)
tip_colors <- c("orange", "gray40", "firebrick", "darkgreen", "goldenrod", "purple")
# Iscrtavanje stabla s bojama i nazivima
plot.phylo(midpoint(fit$tree),  cex = 1.2, font = 2)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/lynx.png",       # RIS
"./03_maca_trka/cat.png",        # DOMACA MACKA
"./03_maca_trka/tiger.png",      # TIGAR
"./03_maca_trka/leopard.png",    # LEOPARD
"./03_maca_trka/lion.png",       # LAV
"./03_maca_trka/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
library(ggtree)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.05) +
theme_tree2()
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.07) +
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.07) +
theme_tree2() +
geom_tiplab(offset = 0.001, align = TRUE)
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(aes(label = name), hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
# Add image paths as a data frame
tree_data <- data.frame(
label = tree$tip.label,
image = c("cheetah.png", "lynx.png", "cat.png", "leopard.png", "lion.png", "tiger.png"),
name  = c("Cheetah", "Lynx", "House Cat", "Leopard", "Lion", "Tiger")
)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(aes(label = name), hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.9, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.001) +  # add space for names
theme_tree2()
print(p)
print(p)
#| echo: false
#| warning: false
#| message: false
#| label: COI stablo
#Ucitavanje sekvence
SequenceFile <- list.files(pattern = "COI-macke.fasta", recursive = T, full.names = TRUE)
Sequences <- readAAStringSet(SequenceFile)
invisible(capture.output(Alignment <- msa(Sequences) ))
AlignedSequences <- as.phyDat(Alignment, type = "AA")
#Stablo
mt <- modelTest(AlignedSequences, model="WAG",
control = pml.control(trace = 0))
# Run pml_bb() but capture and discard the output
invisible(capture.output(
fit <- pml_bb(mt, model="WAG")
))
tree <- midpoint(fit$tree)
# Prilagođeni nazivi s emojijima
images <- c(
"./03_maca_trka/stabala/lynx.png",       # RIS
"./03_maca_trka/stabala/cat.png",        # DOMACA MACKA
"./03_maca_trka/stabala/tiger.png",      # TIGAR
"./03_maca_trka/stabala/leopard.png",    # LEOPARD
"./03_maca_trka/stabala/lion.png",       # LAV
"./03_maca_trka/stabala/cheetah.png"     # GEPARD
)
# Add image paths as a data frame
tree_data <- data.frame(label = tree$tip.label, image = images)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.06, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.01) +  # add space for names
theme_tree2()
print(p)
# Iscrtavanje stabla s bojama i nazivima
p <- ggtree(tree) %<+% tree_data +
geom_tiplab(aes(image = image), geom = "image", size = 0.12, offset = 0.002) +
geom_tiplab(hjust = -0.1, size = 4) +
xlim(0, max(tree$edge.length) + 0.02) +  # add space for names
theme_tree2()
print(p)
quarto::quarto_render()
